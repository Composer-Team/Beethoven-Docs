"use strict";(self.webpackChunkbeethoven_docs=self.webpackChunkbeethoven_docs||[]).push([[7795],{8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},9536:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"type":"mdx","permalink":"/Beethoven-Docs/","source":"@site/src/pages/index.md","title":"Getting Started with Beethoven","description":"Beethoven is a flexible framework for designing and deploying heterogeneous multi-core hardware accelerators. It simplifies the development process by providing high-level abstractions for communication and platform integration while maintaining performance comparable to hand-written RTL.","frontMatter":{},"unlisted":false}');var i=t(4848),o=t(8453);const s={},l="Getting Started with Beethoven",a={},c=[{value:"Key Features",id:"key-features",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Performance Expectations",id:"performance-expectations",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Template",id:"template",level:2},{value:"Need Help Beyond the Doc?",id:"need-help-beyond-the-doc",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"getting-started-with-beethoven",children:"Getting Started with Beethoven"})}),"\n",(0,i.jsx)("p",{align:"center",children:(0,i.jsx)("img",{src:"img/favicon.png",alt:"icon",width:"400"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Beethoven"})," is a flexible framework for designing and deploying heterogeneous multi-core hardware accelerators. It simplifies the development process by providing high-level abstractions for communication and platform integration while maintaining performance comparable to hand-written RTL."]}),"\n",(0,i.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multi-Core Support"}),": Design and deploy multiple accelerator cores with automatic resource management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Platform Agnostic"}),": Supports multiple FPGA platforms and ASIC development"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Memory Abstraction"}),": Simplified memory management through Reader/Writer interfaces"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Software Integration"}),": Automatic generation of C++ bindings and runtime management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flexible Communication"}),": Built-in support for host-to-accelerator and accelerator-to-accelerator communication"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Basic understanding of hardware accelerator design concepts"}),"\n",(0,i.jsx)(n.li,{children:"Familiarity with Chisel Hardware Description Language"}),"\n",(0,i.jsx)(n.li,{children:"Development environment with Chisel toolchain installed"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"performance-expectations",children:"Performance Expectations"}),"\n",(0,i.jsx)(n.p,{children:"Based on our benchmarks:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Comparable or better performance than HLS-generated designs"}),"\n",(0,i.jsx)(n.li,{children:"Similar resource utilization to hand-written RTL"}),"\n",(0,i.jsx)(n.li,{children:"Significantly reduced development time"}),"\n",(0,i.jsx)(n.li,{children:"Successful deployment of complex systems (e.g., 23-core attention accelerator)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.a,{href:"/Beethoven/",children:(0,i.jsx)(n.strong,{children:"Here"})})]}),"\n",(0,i.jsx)(n.h2,{id:"template",children:"Template"}),"\n",(0,i.jsxs)(n.p,{children:["Please clone or fork the ",(0,i.jsx)(n.a,{href:"https://github.com/Composer-Team/beethoven-template",children:(0,i.jsx)(n.strong,{children:"Beethoven Accelerator Template"})})," and start building your accelerator with Beethoven."]}),"\n",(0,i.jsx)(n.h2,{id:"need-help-beyond-the-doc",children:"Need Help Beyond the Doc?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Submit issues on our ",(0,i.jsx)(n.a,{href:"https://github.com/Composer-Team/Beethoven-Software",children:"GitHub repository"})]}),"\n",(0,i.jsxs)(n.li,{children:["Contact our ",(0,i.jsx)(n.a,{href:"/links/",children:"team members"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);